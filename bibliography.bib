@article{church_1936,
 ISSN = {00029327, 10806377},URL = {http://www.jstor.org/stable/2371045}, author = {Alonzo Church}, journal = {American Journal of Mathematics}, number = {2}, pages = {345--363}, publisher = {Johns Hopkins University Press}, title = {An Unsolvable Problem of Elementary Number Theory}, volume = {58}, year = {1936}
}

@article{turing_1937, title={Computability and $\lambda$-definability}, volume={2}, DOI={10.2307/2268280}, number={4}, journal={The Journal of Symbolic Logic}, publisher={Cambridge University Press}, author={Turing, A. M.}, year={1937}, pages={153–163}}

@article{curry_1930,
 ISSN = {00029327, 10806377},
 URL = {http://www.jstor.org/stable/2370619},
 author = {H. B. Curry},
 journal = {American Journal of Mathematics},
 number = {3},
 pages = {509--536},
 publisher = {Johns Hopkins University Press},
 title = {Grundlagen der Kombinatorischen Logik},
 volume = {52},
 year = {1930}
}

@article{church_1940, title={A formulation of the simple theory of types}, volume={5}, DOI={10.2307/2266170}, number={2}, journal={The Journal of Symbolic Logic}, publisher={Cambridge University Press}, author={Church, Alonzo}, year={1940}, pages={56–68}}

@article{tait_1967, title={Intensional interpretations of functionals of finite type I}, volume={32}, DOI={10.2307/2271658}, number={2}, journal={Journal of Symbolic Logic}, publisher={Cambridge University Press}, author={Tait, W. W.}, year={1967}, pages={198–212}}

@techreport{milner_1973,
  title={Models of LCF.},
  author={Robin Milner},
  year={1973},
  url={https://api.semanticscholar.org/CorpusID:117118678}
}

@article{milner_1977,
title = {Fully abstract models of typed $\lambda$-calculi},
journal = {Theoretical Computer Science},
volume = {4},
number = {1},
pages = {1-22},
year = {1977},
issn = {0304-3975},
doi = {https://doi.org/10.1016/0304-3975(77)90053-6},
url = {https://www.sciencedirect.com/science/article/pii/0304397577900536},
author = {Robin Milner},
abstract = {A semantic interpretation A for a programming language L is fully abstract if, whenever A〚C[M]〛⊑A〚C[N]〛 for two program phrases M,N and for all program contexts C[ ], it follows that A〚M〛⊑A〚N〛. A model M for the language is fully abstract if the natural interpretation A of L in M is fully abstract. We show that under certain conditions there exists, for an extended typed λ-calculus, a unique fully abstract model.}
}

@article{plotkin_1977, 
title = {LCF considered as a programming language}, journal = {Theoretical Computer Science}, volume = {5}, number = {3}, pages = {223-255}, year = {1977}, issn = {0304-3975}, doi = {https://doi.org/10.1016/0304-3975(77)90044-5}, url = {https://www.sciencedirect.com/science/article/pii/0304397577900445}, author = {G.D. Plotkin}
}

@article{loader_1996,
title = {Finitary PCF is not decidable},
journal = {Theoretical Computer Science},
volume = {266},
number = {1},
pages = {341-364},
year = {1996},
issn = {0304-3975},
doi = {https://doi.org/10.1016/S0304-3975(00)00194-8},
url = {https://www.sciencedirect.com/science/article/pii/S0304397500001948},
author = {Ralph Loader},
keywords = {PCF, Decidability, Lambda calculus, Full abstraction},
}

@inproceedings{cartwright_1992,
author = {Cartwright, Robert and Felleisen, Matthias}, title = {Observable Sequentiality and Full Abstraction}, year = {1992}, isbn = {0897914538}, publisher = {Association for Computing Machinery}, address = {New York, NY, USA}, url = {https://doi.org/10.1145/143165.143232}, doi = {10.1145/143165.143232}, booktitle = {Proceedings of the 19th ACM SIGPLAN-SIGACT Symposium on Principles of Programming Languages}, pages = {328–342}, numpages = {15}, location = {Albuquerque, New Mexico, USA}, series = {POPL '92} 
}

@article{laird_2007,
title = "On the expressiveness of affine programs with non-local control: the elimination of nesting in SPCF", author = "Laird, {James D.}", year = "2007", volume = "77", pages = "511--531", journal = "Fundamenta Informaticae", issn = "0169-2968", publisher = "IOS Press", number = "4",
}

@book{Jones, journal={Abstract Syntax Tree Implementation Idioms}, author={Jones, joel}} 

@article{jones_2003,
  added-at = {2009-07-16T11:15:30.000+0200},
  author = {Jones, Joel},
  biburl = {https://www.bibsonomy.org/bibtex/2a86095c92a9801ab24d2196d334abe46/gwpl},
  institution = {Department of Computer Science at University of Alabama},
  interhash = {8354ebeb83ea5fb769e016686e0e79aa},
  intrahash = {a86095c92a9801ab24d2196d334abe46},
  journal = {Pattern Languages of Program Design},
  keywords = {mgr todo_tags},
  note = {Proceedings of the 10th Conference on Pattern Languages of Programs (PLoP2003)},
  timestamp = {2009-07-16T11:15:30.000+0200},
  title = {Abstract Syntax Tree Implementation Idioms},
  url = {http://hillside.net/plop/plop2003/Papers/Jones-ImplementingASTs.pdf},
  year = 2003
}

@inproceedings{Liang1995MonadTA,
  title={Monad transformers and modular interpreters},
  author={Sheng Liang and Paul Hudak and Mark P. Jones},
  booktitle={ACM-SIGACT Symposium on Principles of Programming Languages},
  year={1995},
  url={https://api.semanticscholar.org/CorpusID:1424753}
}